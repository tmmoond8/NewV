type Message {
  id: Int!
  user: User!
  text: String!
  createdAt: Float!
}

type User {
  id: Int!
  nickname: String!
}

type File {
  name: String!
  children: [File]
  content: String!
}

type Query {
  GetFile: File
  GetMessages: GetMessagesResponse!
}

type GetMessagesResponse {
  ok: Boolean!
  error: String
  messages: [Message]
}

type ChatJoinResponse {
  ok: Boolean!
  error: String
  token: String
}

type Mutation {
  ChatJoin(nickname: String!): ChatJoinResponse!
  SendMessage(userId: Int!, text: String!): SendMessageResponse!
}

type Subscription {
  MessageSubscription: Message
}

type SendMessageResponse {
  ok: Boolean!
  error: String
  message: Message
}
