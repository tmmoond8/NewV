type File {
  name: String!
  children: [File]
  content: String!
}

type Query {
  GetFile: File
  GetMessages: GetMessagesResponse!
  GetUser: GetUserResponse!
  GetInitial: GetInitialResponse!
}

type GetMessagesResponse {
  ok: Boolean!
  error: String
  messages: [Message]
}

type GetUserResponse {
  ok: Boolean!
  error: String
  user: User
}

type JoinChatResponse {
  ok: Boolean!
  error: String
  token: String
}

type Mutation {
  JoinChat(nickname: String!): JoinChatResponse!
  SendMessage(text: String!): SendMessageResponse!
  SubmitAnswerInitial(id: Int!, answer: String!): SubmitAnswerInitialResponse!
}

type Subscription {
  MessageSubscription: Message
}

type SendMessageResponse {
  ok: Boolean!
  error: String
  message: Message
}

type Message {
  id: Int!
  user: User!
  text: String!
  createdAt: Float!
}

type User {
  id: Int!
  nickname: String!
}

type Initial {
  quiz: String!
  syllables: [String]!
  id: Int!
  level: Int!
  length: Int!
}

type GetInitialResponse {
  ok: Boolean!
  error: String
  data: [Initial]
}

type SubmitAnswerInitialResponse {
  ok: Boolean!
  error: String
  result: Boolean
}
